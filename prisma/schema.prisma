generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  users     User[]
  invoices  Invoice[]
}

model User {
  id         String   @id @default(uuid())
  username   String   @unique
  email      String   @unique
  password   String
  company_id String?
  role       Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())

  company    Company? @relation(fields: [company_id], references: [id])
  invoices   Invoice[] @relation("UserInvoices")
}

model Product {
  id          String   @id @default(uuid())
  quantity    Float
  magnitude   String
  brand_id    String
  name_id     String
  description String?
  company_id  String
  price       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  brand       Brand  @relation(fields: [brand_id], references: [id])
  name        Name   @relation(fields: [name_id], references: [id])
  seels       Seel[]
}

model Brand {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  products  Product[]
}

model Name {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  products  Product[]
}

model Seel {
  id         String   @id @default(uuid())
  invoice_id String
  product_id String
  quantity   Float

  invoice    Invoice @relation(fields: [invoice_id], references: [id])
  product    Product @relation(fields: [product_id], references: [id])
}

model Invoice {
  id          String   @id @default(uuid())
  user_id     String
  company_id  String
  buyer_id    String
  description String?
  amount      Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  user        User    @relation(fields: [user_id], references: [id], name: "UserInvoices")
  company     Company @relation(fields: [company_id], references: [id])
  buyer       Buyer   @relation(fields: [buyer_id], references: [id])
  seels       Seel[]
}

model Buyer {
  id         String   @id @default(uuid())
  name       String
  email      String   @unique
  phone      String
  debt       Float    @default(0)
  total_debt Float    @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())

  invoices   Invoice[]
}

model invitation_link {
  id         String  @id @default(uuid())
  company_id String
  role       Int
  used_by    String? @unique
}
